// <auto-generated />
using System;
using CodeVote.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeVote.Migrations
{
    [DbContext(typeof(CodeVoteContext))]
    [Migration("20250512184240_mssql.local_migration_742")]
    partial class mssqllocal_migration_742
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeVote.DbModels.ProjectIdeaDbM", b =>
                {
                    b.Property<Guid>("ProjectIdeaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoteCount")
                        .HasColumnType("int");

                    b.HasKey("ProjectIdeaId");

                    b.ToTable("ProjectIdeas");
                });

            modelBuilder.Entity("CodeVote.DbModels.UserDbM", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CodeVote.DbModels.VoteDbM", b =>
                {
                    b.Property<Guid>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectIdeaDbMProjectIdeaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProjectIdeaId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserDbMUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VoteId");

                    b.HasIndex("ProjectIdeaDbMProjectIdeaId");

                    b.HasIndex("UserDbMUserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("CodeVote.DbModels.VoteDbM", b =>
                {
                    b.HasOne("CodeVote.DbModels.ProjectIdeaDbM", "ProjectIdeaDbM")
                        .WithMany("VoteDbM")
                        .HasForeignKey("ProjectIdeaDbMProjectIdeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeVote.DbModels.UserDbM", "UserDbM")
                        .WithMany("VoteDbM")
                        .HasForeignKey("UserDbMUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectIdeaDbM");

                    b.Navigation("UserDbM");
                });

            modelBuilder.Entity("CodeVote.DbModels.ProjectIdeaDbM", b =>
                {
                    b.Navigation("VoteDbM");
                });

            modelBuilder.Entity("CodeVote.DbModels.UserDbM", b =>
                {
                    b.Navigation("VoteDbM");
                });
#pragma warning restore 612, 618
        }
    }
}
